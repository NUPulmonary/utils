import pandas as pd
import os

MODE = config['mode']
WRAPPER_DIR = "/home/rag0151/utils/snakemake/wrappers"
#receive command-line inputs using the --config flag
DATA_DIR = config['data_dir']
SAMPLE_CSV_PATH = config['sample_csv_path'] 
CELLRANGER_DIR = config['cellranger_dir']

#optional flags
if 'additional_flags_mkfastq' in config:
   ADDITIONAL_FLAGS_MKFASTQ = config['additional_flags_mkfastq']
   if ADDITIONAL_FLAGS_MKFASTQ == "" or ADDITIONAL_FLAGS_MKFASTQ is None:
     ADDITIONAL_FLAGS_MKFASTQ = None
else:
  ADDITIONAL_FLAGS_MKFASTQ = None
if 'additional_flags_cellranger' in config:
   ADDITIONAL_FLAGS_CELLRANGER = config['additional_flags_cellranger']
   if ADDITIONAL_FLAGS_CELLRANGER == "" or ADDITIONAL_FLAGS_CELLRANGER is None:
      ADDITIONAL_FLAGS_CELLRANGER = None
else:
  ADDITIONAL_FLAGS_CELLRANGER = None

if MODE != 'demult_only':
  TRANSCRIPTOME = config['transcriptome']
  INCLUDE_INTRONS = config['include_introns']
  INPUT_FASTQ_TYPE = config['input_fastq_type']
  
if MODE != 'demult_only' and INPUT_FASTQ_TYPE != 'gex':
  ANTIBODIES = config['antibodies']
  #handle empty param
  if ANTIBODIES == "" or ANTIBODIES is None:
    ANTIBODIES = None
  GEX_FASTQS = config['gex_fastqs']
  if GEX_FASTQS == "" or GEX_FASTQS is None:
    GEX_FASTQS = None
elif MODE != 'demult_only' and INPUT_FASTQ_TYPE == 'gex':
  GEX_FASTQS = config['gex_fastqs']
  if GEX_FASTQS == "" or GEX_FASTQS is None:
    GEX_FASTQS = None
  else:
    GEX_FASTQS = GEX_FASTQS.split(' ')
  ANTIBODIES = None

SAMPLES = pd.read_csv(SAMPLE_CSV_PATH)
os.chdir(DATA_DIR)

if MODE != 'demult_only':
  rule all:
      input:
        f"{DATA_DIR}/cellranger/metrics_summary.csv"
else:
  rule all:
      input:
        [f"{DATA_DIR}/fastq-run/{run_id}" for run_id in SAMPLES.RunID.unique()]

rule sample_sheet:
    input: SAMPLE_CSV_PATH
    output: f"{DATA_DIR}/{{run_id,\w+}}.csv"
    params:
        slurm__skip=True
    wrapper:
        f"file://{WRAPPER_DIR}/sample_sheet"

rule demultiplex:
    input:
        "../../raw/{run_id}",
        "{dir}/{run_id}.csv"
    output: directory("{dir}/fastq-run/{run_id,\w+}")
    params:
        slurm__account="b1042",
        slurm__partition="genomics",
        slurm__cores=4,
        slurm__hours=16,
        slurm__mem=40,
        cellranger_dir=CELLRANGER_DIR,
        keep_cellranger_output=True,
        additional_flags_mkfastq=ADDITIONAL_FLAGS_MKFASTQ
    wrapper:
        f"file://{WRAPPER_DIR}/mkfastq"

if MODE != 'demult_only':
  rule cellranger:
      input: 
          lambda x: [f"{DATA_DIR}/fastq-run/{r}" for r in SAMPLES.RunID[SAMPLES.Sample == x.sample].values]
      output: directory(f"{DATA_DIR}/cellranger/{{sample,\w+}}")
      params:
          slurm__account="b1042",
          slurm__partition="genomics",
          slurm__cores=8,
          slurm__hours=16,
          slurm__mem=60,
          chemistry="auto",
          input_fastq_type=INPUT_FASTQ_TYPE,
          antibodies=ANTIBODIES,
          transcriptome=TRANSCRIPTOME,
          cellranger_dir=CELLRANGER_DIR,
          sample_csv_path = SAMPLE_CSV_PATH,
          gex_fastqs = GEX_FASTQS,
          include_introns = INCLUDE_INTRONS,
          additional_flags_cellranger=ADDITIONAL_FLAGS_CELLRANGER
      wrapper:
          f"file://{WRAPPER_DIR}/cellranger"

if MODE != 'demult_only':
  rule metrics_summary:
      input: expand("{{dir}}/cellranger/{sample}", sample=SAMPLES.Sample.unique())
      output: "{dir}/cellranger/metrics_summary.csv"
      params:
          slurm__skip=True
      wrapper:
          f"file://{WRAPPER_DIR}/metrics_summary"